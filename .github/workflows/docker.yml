# Reusable workflow for building and pushing a Docker Image to the given registry:
# 
# 1. GitHub Container Registry:
#   username: <automatically uses the repository owner>
#   password: <automatically generated GH token>
# 2. DockerHub
#   username: <repository variable>
#   password: <repository secret>

name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      version:
        required: true
        type: string
        default: "latest"
      dockerfile:
        required: true
        type: string
      readme-file:
        required: true
        type: string
    secrets:
      DOCKERHUB_TOKEN:
        required: false

jobs:
  build-and-push-image:
    secrets:
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        registry: [docker.io, ghcr.io]
        include:
          - registry: docker.io
            registry-username: ${{ vars.DOCKERHUB_USERNAME }}
            registry-password: ${{ secrets.DOCKERHUB_TOKEN }}
          - registry: ghcr.io
            registry-username: ${{ github.actor }}
            registry-password: ${{ secrets.GITHUB_TOKEN }}

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ matrix.registry-username }}
          password: ${{ matrix.registry-password }}

      - name: Check if version exists
        id: check_version
        run: |
          if docker manifest inspect ${{ matrix.registry }}/${{ matrix.registry-username }}/${{ inputs.image-name }}:${{ inputs.version }} > /dev/null 2>&1; then
            echo "Version ${{ inputs.version }} already exists."
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "Version ${{ inputs.version }} does not exist."
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Log in to the registry
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ matrix.registry-username }}
          password: ${{ matrix.registry-password }}

      - name: Build and push Docker image
        # if: env.exists == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/${{ inputs.dockerfile }}
          push: true
          tags: |
            ${{ matrix.registry }}/${{ matrix.registry-username }}/${{ inputs.image-name }}:${{ inputs.version }}, \
            ${{ matrix.registry }}/${{ matrix.registry-username }}/${{ inputs.image-name }}:latest

      - name: Docker Hub Description
        if: ${{ matrix.registry == 'docker.io' }}
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ matrix.registry-username }}
          password: ${{ matrix.registry-password }}
          repository: ${{ matrix.registry-username }}/${{ inputs.image-name }}
          readme-filepath: ${{ inputs.readme-file }}
